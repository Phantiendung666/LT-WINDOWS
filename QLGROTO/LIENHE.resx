<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAFBQAAAEAIAC4BgAAFgAAACgAAAAUAAAAKAAAAAEAIAAAAAAAQAYAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAYMuEAFvCfgBdxYAAUaxxAF3FgDFcxICRXMR/1FzEf+RcxH/kXMR/yV3E
        gHddxoEaXMN/AGHNhQBfyIIAAAAAAAAAAAAAAAAAAAAAAF7IggBfyoMAXMN/AF3GgRdcxICBXMR/zVzE
        gKFdxIBVXcWALl3EgDRdxIBoXMR/uFzEf79dxYA8W8F+AGrgkgA7jFIAAAAAAAAAAABdxoEAXseBAFq+
        fABdxYA9XMR/v1zEf7JdxYA9YMyFA1zEfwBdxYAAXcSAAFzDfwBex4ENXMSAeVzEf8pdxYApXcSAAAld
        IQAAAAAAXseBAF3GgQBk1YoBXcSAXVzEf9JcxIB6XseBDVzEgABbwH0AWr99AF3EgABu6pgAXMN/AF3G
        gQBgy4QDXMR/rFzEgHRcwn8APZ9mAF/JgwBeyIIAWr98AFzEgF5cxH/SXcSAVFa1dwBXuHgAXcWAPlzE
        gI9cxICJXcWALVvCfgBfy4QAXcWAAF/JgwVcxH+xXMSAbFzDfwA8rG0AW8F+AFzDfwBdxIA/XMR/0l3E
        gFJcwn8AX8qDA13EgG5cxH/RXMR/kVzEf51cxH/KXcWANWbcjgFdxYAdXMSAh1zEf8ddxYAjXcWAADWg
        XwBdxYAAXcWAGFzEf8BcxIB4WLp5AF/KgwNcxIB5XMR/zl3EgERZvXsAYc2GA1zEgIJcxH/PXMSArVzE
        f8pcxICwXcWANVvCfgAAAAAAAAAAAEGRYABcxICEXMR/sF3GgQxYuXkAXMSAbVzEf85dxIA5XMN/AF/J
        gwBdxoEAXseBCF3EgEpdxIBnXcSAPl7HggpcxH8AZtiMAF/IggAAAAAAXcSAM1zDf85dxIA7XMSAAF3E
        gDxcxH/RXcSARVzCfwBgzIQAX8iCAF3FgQBdxoEAXMR/AFzDfwBdxYAAXseBAF3FgABgzIUAAAAAAAAA
        AABcxICVXMR/oWDKhANbwH0AXMSAi1zEf5VZvXsAX8mCAF/JgwAAAAAAAAAAAFfIhQBdxoEAXcaBCl3F
        gSJdxoEDXcWAAF3FgABcw38AYM2FAFzEf9ddxIBVXMN/AFvAfQBcxICBXMR/p1/IggddxYAAXcWAAAAA
        AAAAAAAAXseBAFzEfwBdxIBPXMR/x13FgRldxYAvXcWAIlzDfwBbwX4AXMN/5l3EgC9dxIAAXcWAAF3F
        gCZcxH/EXMSAj13GgQxdxYAAb96TAF7IggBfyIIAWr58AFzEf45cw3/OXcaBGFzEf7pcxIB/XcWAJF3E
        gHxcw3/kXcSAN13EgABYuXkAXMJ/AF3FgCpcxH/LXcSAVVzDfwBdxoEAXMSAAFq+fABdxYBDXMN/5VzE
        f3ldxoEbXMN/3VzEgGddxIBgXMN//FzEf8VcxIBuXMJ/AFvCfgBhzYUALFg7AFzEf6hdxIBvXMN/AF3G
        gQtdxIBLXMSAilzDf+RcxH+vXsaBEFzEgGZcw3/mXcWALVzEf4hcxH/kXcSAcFzEf71dxoEQXcWBAF3F
        gABdxYAdXMR/yl3EgEFdxIAAXcWAKVzEf85cw3/QXMSAe17HgRBdxYA2XMN/3lzEf5JdxoEVXMN/y1zE
        f6NdxYEVXMR/uFzEgIVeyIIJXsiCClzEf4xcxH+wXsaBCl3GgQBdxoEEXcWBHV7HgRldxoEaXcSAZVzD
        f95cxH+5XcaBF1zEgGpcw3/nXcSAQVzEfwBdxYAyXMR/wlzEf7hcxH+6XMR/wl3FgDFcxH8AXcWAAF3E
        gABdxYA0XMR/ulzDf9xcw3/mXMSAk13GgRddxYBGXMN/5VzEgIlgy4UCm//XAFzDfwBdxYAeXMSAYl3E
        gFxdxYAcXMJ/ABctIABgyoQAXcSAAF3FgCdcxICEXMSAaF3FgC1ex4EVXcSAa1zDf+ZcxH+nXcaBEV3F
        gABfyYMAWbx7AF3FgABcw38AXMN/AF3FgABYuXkAX8qDAAAAAABbwX4AXMN/AF3FgCddxIBfXMSAiFzE
        f8tcw3/mXMSAiF3GgRFdxIAAXMR/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF/K
        hABawH0AXMSAhVzDf/xcxH/jXMSAoV3FgD9hzoYCXcWAAFzEgABh0IcA/wDwAPwAcAD4PDAA4P4wAOMO
        MADEADAAiEBwAIjg8AAR//AAE/jwADH4MAAw+AAAOPAAADyAAAAYgAAAAIAAAIHAAADDwBAA/+AwAP/g
        cAA=
</value>
  </data>
</root>